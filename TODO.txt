# Notes

## Issues

Order is not defined between message types -- at least makes testing hard

# TODO

## Monitoring

Maybe there's a "thespian runtime" that handles monitoring all actors and
ensuring the various invariants.

Want:

* Build monitor support similar to Erlang's
  * something like link so we can build supervisors
  * Health monitoring to kill "stuck" actors
* Useful runtime metrics
  * Expvar integration?
  * channel utilization
  * actor utilization

## Communication

Make channels ("mailboxes") a first-class type, that must be provided when
creating a new actor instance.

Want:

* Abstraction for channels, too (mailbox)
* Some way to support multiple consumers (e.g., multiple demuxes)
* Flexible polling (so, ignore some messages in some modes)

## Tasks

* a way to test this with unit tests and not a program
* more mailbox types
  * RPC (blocking, with sync channel)
  * Timer (heap of times with callbacks)
* mix context in here somehow

Misc:
* clean up how mailbox types are specified; maybe parse `<path>.FooMailbox`?

Later:
* allow build flags for generation
