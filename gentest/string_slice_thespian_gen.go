// code generated by thespian; DO NOT EDIT

package gentest

// StringSliceMailbox is a mailbox for messages of type []string.
type StringSliceMailbox struct {
	C chan []string
}

// ApplyDefaults applies default settings to this StringSlice, if
// the struct has its zero value.
func (mbox *StringSliceMailbox) ApplyDefaults() {
	if mbox.C == nil {
		mbox.C = make(chan []string, 10) // default channel size
	}
}

// Tx creates a StringSliceTx for this mailbox
func (mbox *StringSliceMailbox) Tx() StringSliceTx {
	return StringSliceTx{
		C: mbox.C,
	}
}

// Rx creates a StringSliceRx for this mailbox
func (mbox *StringSliceMailbox) Rx() StringSliceRx {
	return StringSliceRx{
		C: mbox.C,
	}
}

// StringSliceTx sends to a mailbox for messages of type []string.
type StringSliceTx struct {
	C chan<- []string
}

// StringSliceRx receives from a mailbox for messages of type []string.
type StringSliceRx struct {
	C <-chan []string
}
