// code generated by thespian; DO NOT EDIT

package gentest

import ()

// StringMailbox is a mailbox for messages of type string.
type StringMailbox struct {
	// C is the bidirectional channel over which messages will be transferred.  If
	// this is not set in the mailbox, a fresh channel will be created automatically.
	C chan string
	// Disabled, if set to true, causes the mailbox to start life disabled.
	Disabled bool
}

// ApplyDefaults applies default settings to this String, if
// the struct has its zero value.
func (mbox *StringMailbox) ApplyDefaults() {
	if mbox.C == nil {
		mbox.C = make(chan string, 10) // default channel size
	}
}

// Tx creates a StringTx for this mailbox
func (mbox *StringMailbox) Tx() StringTx {
	return StringTx{
		C: mbox.C,
	}
}

// Rx creates a StringRx for this mailbox
func (mbox *StringMailbox) Rx() StringRx {
	return StringRx{
		C:        mbox.C,
		Disabled: mbox.Disabled,
	}
}

// StringTx sends to a mailbox for messages of type string.
type StringTx struct {
	C chan<- string
}

// StringRx receives from a mailbox for messages of type string.
type StringRx struct {
	C <-chan string
	// Disabled, if set to true, will disable receipt of messages from this mailbox.
	Disabled bool
}

// Chan gets a channel for this mailbox, or nil if there is nothing to select from.
func (rx *StringRx) Chan() <-chan string {
	if rx.Disabled {
		return nil
	}
	return rx.C
}
